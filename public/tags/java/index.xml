<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Café &amp; Tapioca</title>
    <link>https://1917dc.github.io/blog/tags/java/</link>
    <description>Recent content in Java on Café &amp; Tapioca</description>
    <generator>Hugo</generator>
    <language>pt-br</language>
    <lastBuildDate>Fri, 15 Aug 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://1917dc.github.io/blog/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring: IoC, DI &amp; Beans</title>
      <link>https://1917dc.github.io/blog/posts/20250815/</link>
      <pubDate>Fri, 15 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://1917dc.github.io/blog/posts/20250815/</guid>
      <description>IoC &amp;ldquo;Inversion of Control&amp;rdquo; ou &amp;ldquo;IoC&amp;rdquo; é um princípio dentro da engenharia de software que visa estabelecer um menor acoplamento, esse baixo acoplamento diz respeito a um código mais abstrato e genérico que cobre a maioria dos casos de uso, mas que ainda assim dá liberdade ao programador para extender essas funcionalidades dentro dos seus casos de uso específicos.&#xA;As vantagens desse tipo de arquitetura são:&#xA;tirar o papel de execução da implementação feita pelo programador; torna mais fácil a refatoração para algum tipo de implementação diferente; maior mudolaridade do código; torna mais fácil o uso de testes com dependências &amp;ldquo;mockadas&amp;rdquo; pelo programador; DI &amp;ldquo;Dependency Injection&amp;rdquo; ou &amp;ldquo;DI&amp;rdquo; é uma das formas de se aplicar o princípio de IoC, dentro desse padrão jogamos a responsabilidade de injetar as dependências para o programador, e não para a interface desse código.</description>
    </item>
    <item>
      <title>Anotações: Spring Boot</title>
      <link>https://1917dc.github.io/blog/posts/20250328/</link>
      <pubDate>Fri, 28 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://1917dc.github.io/blog/posts/20250328/</guid>
      <description>Prefácio Antes de tudo: estudar Spring Boot parece uma bagunça sem fim, e você não está errado. Estudar Spring Boot é uma bagunça!&#xA;Porém, mesmo com minhas dificuldades eu dei meu jeito. Trago aqui todas as minhas anotações relacionadas ao framework que me ajudaram na compreensão dos conceitos menos intuitivos que o framework necessita que o programador saiba para construir uma API de qualidade.&#xA;Não achei a documentação do framework tão boa para aprender como dizem, então tive que fuçar internet á fora para achar conteúdos que me ajudassem de fato a compreender os conceitos que fundamentam a estrutura de uma aplicação de API RESTful em Spring Boot + Spring Security.</description>
    </item>
  </channel>
</rss>
