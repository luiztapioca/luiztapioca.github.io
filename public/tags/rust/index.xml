<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust on Café &amp; Tapioca</title>
    <link>http://localhost:1313/tags/rust/</link>
    <description>Recent content in Rust on Café &amp; Tapioca</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Mon, 23 Dec 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Advent of Code 2024 | Dia 3</title>
      <link>http://localhost:1313/posts/20241223/</link>
      <pubDate>Mon, 23 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/20241223/</guid>
      <description>Prólogo: Hoje completei o terceiro dia do Advent of Code (2024) em Rust, e existem várias coisas nas quais eu gostaria de pontuar, questões essas relacionadas á minha curva de aprendizado em Rust e meu objetivo com essa linguagem. Desafio 1 (dia 3): Contexto: Foi entregue um input de arquivo de texto (como sempre), porém dessa vez era um arquivo populado com diversos caracteres aleatórios, dentro disso haviam instruções de multiplicação escondidas dentro do arquivo; o objetivo do desafio era juntar todas essas instruções mul(X,Y), sendo X,Y números inteiros com 1-3 dígitos cada.</description>
    </item>
    <item>
      <title>Advent of Code 2024 | Dia 2</title>
      <link>http://localhost:1313/posts/20241219/</link>
      <pubDate>Thu, 19 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/20241219/</guid>
      <description>Prólogo: Nesses últimos dias andei estudando algumas coisas fora do escopo da programação, portanto não fui atrás até ontem de voltar a praticar Rust usando o Advent of Code (2024). Esse segundo dia aparentava ser muito mais complexo do que o primeiro, porém me faltava um pouco de conhecimento com a sintaxe da linguagem para executar a resolução dos problemas de forma correta e incisiva; então esse problema serviu muito bem para me ensinar conceitos específicos de sorting evolvendo arrays usando sinatxes específicas da linguagem, como será visto no tópico seguinte.</description>
    </item>
    <item>
      <title>Advent of Code 2024 | Dia 1</title>
      <link>http://localhost:1313/posts/20241208/</link>
      <pubDate>Sun, 08 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/20241208/</guid>
      <description>Prólogo: Há alguns dias venho olhando o novo &amp;ldquo;Advent of Code&amp;rdquo; deste ano. O &amp;ldquo;Advent of Code&amp;rdquo; basicamente consiste em uma série de desafios com temática de natal e uma história por trás, desafios esses que consistem em problemas de lógica usando inputs e outputs; eu decidi aproveitar a minha vontade de aprender Rust para experimentar a minha capacidade de resolver problemas em uma linguagem nova para mim, e experimentar junto disso esse evento, que já ocorre fazem 9 anos(2015).</description>
    </item>
    <item>
      <title>Rust Ownership</title>
      <link>http://localhost:1313/posts/20241203/</link>
      <pubDate>Tue, 03 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/20241203/</guid>
      <description>Ao invés de depender de garbage collection, que existem em linguagem de alto nível como Java e Python, ou de depender de alocação de memória explícita como C; o Rust executa isso de uma forma diferente: usando &amp;ldquo;ownership&amp;rdquo; que são checadas em tempo de compilação, caso alguma regra seja quebrada nesse sentido o programa não vai compilar.&#xA;Heap &amp;amp; Stack The heap is less organized: when you put data on the heap, you request a certain amount of space.</description>
    </item>
    <item>
      <title>First steps into Rust</title>
      <link>http://localhost:1313/posts/20241202/</link>
      <pubDate>Mon, 02 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/20241202/</guid>
      <description>Why I&amp;rsquo;m learning Rust? Basically, I was planning on studying compilers, interpreters and how programming languages work on the low level part.&#xA;I tought that Rust was a good choice because it has large and active open source community, and it&amp;rsquo;s simpler than C and C++. I had sometime in last year learning C, was a pain in the ass, but I recognize the impact that it had in my understanding of how a computer memory works on the low level.</description>
    </item>
  </channel>
</rss>
